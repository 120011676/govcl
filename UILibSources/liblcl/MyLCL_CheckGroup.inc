
//----------------------------------------
// The code is automatically generated by the GenlibLcl tool.
// Copyright Â© ying32. All Rights Reserved.
// 
// Licensed under Apache License 2.0
//
//----------------------------------------

function CheckGroup_Create(AOwner: TComponent): TCheckGroup; extdecl;
begin
  Result :=  TCheckGroup.Create(AOwner);
end;

procedure CheckGroup_Free(AObj: TCheckGroup); extdecl;
begin
  AObj.Free;
end;

procedure CheckGroup_FlipChildren(AObj: TCheckGroup; AllLevels: LongBool); extdecl;
begin
  AObj.FlipChildren(AllLevels);
end;

function CheckGroup_Rows(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.Rows;
end;

function CheckGroup_CanFocus(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.CanFocus;
end;

function CheckGroup_ContainsControl(AObj: TCheckGroup; Control: TControl): LongBool; extdecl;
begin
  Result :=  AObj.ContainsControl(Control);
end;

function CheckGroup_ControlAtPos(AObj: TCheckGroup; var Pos: TPoint; AllowDisabled: LongBool; AllowWinControls: LongBool): TControl; extdecl;
begin
  Result :=  AObj.ControlAtPos(Pos, AllowDisabled, AllowWinControls);
end;

procedure CheckGroup_DisableAlign(AObj: TCheckGroup); extdecl;
begin
  AObj.DisableAlign;
end;

procedure CheckGroup_EnableAlign(AObj: TCheckGroup); extdecl;
begin
  AObj.EnableAlign;
end;

function CheckGroup_FindChildControl(AObj: TCheckGroup; ControlName: PChar): TControl; extdecl;
begin
  Result :=  AObj.FindChildControl(ControlName);
end;

function CheckGroup_Focused(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.Focused;
end;

function CheckGroup_HandleAllocated(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.HandleAllocated;
end;

procedure CheckGroup_InsertControl(AObj: TCheckGroup; AControl: TControl); extdecl;
begin
  AObj.InsertControl(AControl);
end;

procedure CheckGroup_Invalidate(AObj: TCheckGroup); extdecl;
begin
  AObj.Invalidate;
end;

procedure CheckGroup_RemoveControl(AObj: TCheckGroup; AControl: TControl); extdecl;
begin
  AObj.RemoveControl(AControl);
end;

procedure CheckGroup_Realign(AObj: TCheckGroup); extdecl;
begin
  AObj.Realign;
end;

procedure CheckGroup_Repaint(AObj: TCheckGroup); extdecl;
begin
  AObj.Repaint;
end;

procedure CheckGroup_ScaleBy(AObj: TCheckGroup; M: Integer; D: Integer); extdecl;
begin
  AObj.ScaleBy(M, D);
end;

procedure CheckGroup_ScrollBy(AObj: TCheckGroup; DeltaX: Integer; DeltaY: Integer); extdecl;
begin
  AObj.ScrollBy(DeltaX, DeltaY);
end;

procedure CheckGroup_SetBounds(AObj: TCheckGroup; ALeft: Integer; ATop: Integer; AWidth: Integer; AHeight: Integer); extdecl;
begin
  AObj.SetBounds(ALeft, ATop, AWidth, AHeight);
end;

procedure CheckGroup_SetFocus(AObj: TCheckGroup); extdecl;
begin
  AObj.SetFocus;
end;

procedure CheckGroup_Update(AObj: TCheckGroup); extdecl;
begin
  AObj.Update;
end;

procedure CheckGroup_BringToFront(AObj: TCheckGroup); extdecl;
begin
  AObj.BringToFront;
end;

procedure CheckGroup_ClientToScreen(AObj: TCheckGroup; var Point: TPoint; var Result: TPoint); extdecl;
begin
  Result :=  AObj.ClientToScreen(Point);
end;

procedure CheckGroup_ClientToParent(AObj: TCheckGroup; var Point: TPoint; AParent: TWinControl; var Result: TPoint); extdecl;
begin
  Result :=  AObj.ClientToParent(Point, AParent);
end;

function CheckGroup_Dragging(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.Dragging;
end;

function CheckGroup_HasParent(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.HasParent;
end;

procedure CheckGroup_Hide(AObj: TCheckGroup); extdecl;
begin
  AObj.Hide;
end;

function CheckGroup_Perform(AObj: TCheckGroup; Msg: Cardinal; WParam: NativeUInt; LParam: NativeInt): NativeInt; extdecl;
begin
  Result :=  AObj.Perform(Msg, WParam, LParam);
end;

procedure CheckGroup_Refresh(AObj: TCheckGroup); extdecl;
begin
  AObj.Refresh;
end;

procedure CheckGroup_ScreenToClient(AObj: TCheckGroup; var Point: TPoint; var Result: TPoint); extdecl;
begin
  Result :=  AObj.ScreenToClient(Point);
end;

procedure CheckGroup_ParentToClient(AObj: TCheckGroup; var Point: TPoint; AParent: TWinControl; var Result: TPoint); extdecl;
begin
  Result :=  AObj.ParentToClient(Point, AParent);
end;

procedure CheckGroup_SendToBack(AObj: TCheckGroup); extdecl;
begin
  AObj.SendToBack;
end;

procedure CheckGroup_Show(AObj: TCheckGroup); extdecl;
begin
  AObj.Show;
end;

function CheckGroup_GetTextBuf(AObj: TCheckGroup; Buffer: PChar; BufSize: Integer): Integer; extdecl;
begin
  Result :=  AObj.GetTextBuf(Buffer, BufSize);
end;

function CheckGroup_GetTextLen(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  {$ifdef darwin}Length(AObj.Caption){$else}AObj.GetTextLen{$endif};
end;

procedure CheckGroup_SetTextBuf(AObj: TCheckGroup; Buffer: PChar); extdecl;
begin
  AObj.SetTextBuf(Buffer);
end;

function CheckGroup_FindComponent(AObj: TCheckGroup; AName: PChar): TComponent; extdecl;
begin
  Result :=  AObj.FindComponent(AName);
end;

function CheckGroup_GetNamePath(AObj: TCheckGroup): PChar; extdecl;
begin
  Result :=  PChar(AObj.GetNamePath);
end;

procedure CheckGroup_Assign(AObj: TCheckGroup; Source: TPersistent); extdecl;
begin
  AObj.Assign(Source);
end;

function CheckGroup_ClassType(AObj: TCheckGroup): TClass; extdecl;
begin
  Result :=  AObj.ClassType;
end;

function CheckGroup_ClassName(AObj: TCheckGroup): PChar; extdecl;
begin
  Result :=  ToPChar(AObj.ClassName);
end;

function CheckGroup_InstanceSize(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.InstanceSize;
end;

function CheckGroup_InheritsFrom(AObj: TCheckGroup; AClass: TClass): LongBool; extdecl;
begin
  Result :=  AObj.InheritsFrom(AClass);
end;

function CheckGroup_Equals(AObj: TCheckGroup; Obj: TObject): LongBool; extdecl;
begin
  Result :=  AObj.Equals(Obj);
end;

function CheckGroup_GetHashCode(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.GetHashCode;
end;

function CheckGroup_ToString(AObj: TCheckGroup): PChar; extdecl;
begin
  Result :=  PChar(AObj.ToString);
end;

procedure CheckGroup_AnchorToNeighbour(AObj: TCheckGroup; ASide: TAnchorKind; ASpace: Integer; ASibling: TControl); extdecl;
begin
  AObj.AnchorToNeighbour(ASide, ASpace, ASibling);
end;

procedure CheckGroup_AnchorParallel(AObj: TCheckGroup; ASide: TAnchorKind; ASpace: Integer; ASibling: TControl); extdecl;
begin
  AObj.AnchorParallel(ASide, ASpace, ASibling);
end;

procedure CheckGroup_AnchorHorizontalCenterTo(AObj: TCheckGroup; ASibling: TControl); extdecl;
begin
  AObj.AnchorHorizontalCenterTo(ASibling);
end;

procedure CheckGroup_AnchorVerticalCenterTo(AObj: TCheckGroup; ASibling: TControl); extdecl;
begin
  AObj.AnchorVerticalCenterTo(ASibling);
end;

procedure CheckGroup_AnchorAsAlign(AObj: TCheckGroup; ATheAlign: TAlign; ASpace: Integer); extdecl;
begin
  AObj.AnchorAsAlign(ATheAlign, ASpace);
end;

procedure CheckGroup_AnchorClient(AObj: TCheckGroup; ASpace: Integer); extdecl;
begin
  AObj.AnchorClient(ASpace);
end;

function CheckGroup_GetAlign(AObj: TCheckGroup): TAlign; extdecl;
begin
  Result :=  AObj.Align;
end;

procedure CheckGroup_SetAlign(AObj: TCheckGroup; AValue: TAlign); extdecl;
begin
  AObj.Align := AValue;
end;

function CheckGroup_GetAnchors(AObj: TCheckGroup): TAnchors; extdecl;
begin
  Result :=  AObj.Anchors;
end;

procedure CheckGroup_SetAnchors(AObj: TCheckGroup; AValue: TAnchors); extdecl;
begin
  AObj.Anchors := AValue;
end;

function CheckGroup_GetAutoFill(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.AutoFill;
end;

procedure CheckGroup_SetAutoFill(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.AutoFill := AValue;
end;

function CheckGroup_GetAutoSize(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.AutoSize;
end;

procedure CheckGroup_SetAutoSize(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.AutoSize := AValue;
end;

function CheckGroup_GetBiDiMode(AObj: TCheckGroup): TBiDiMode; extdecl;
begin
  Result :=  AObj.BiDiMode;
end;

procedure CheckGroup_SetBiDiMode(AObj: TCheckGroup; AValue: TBiDiMode); extdecl;
begin
  AObj.BiDiMode := AValue;
end;

function CheckGroup_GetCaption(AObj: TCheckGroup): PChar; extdecl;
begin
  Result :=  PChar(AObj.Caption);
end;

procedure CheckGroup_SetCaption(AObj: TCheckGroup; AValue: PChar); extdecl;
begin
  AObj.Caption := AValue;
end;

function CheckGroup_GetClientHeight(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.ClientHeight;
end;

procedure CheckGroup_SetClientHeight(AObj: TCheckGroup; AValue: Integer); extdecl;
begin
  AObj.ClientHeight := AValue;
end;

function CheckGroup_GetClientWidth(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.ClientWidth;
end;

procedure CheckGroup_SetClientWidth(AObj: TCheckGroup; AValue: Integer); extdecl;
begin
  AObj.ClientWidth := AValue;
end;

function CheckGroup_GetColor(AObj: TCheckGroup): TColor; extdecl;
begin
  Result :=  AObj.Color;
end;

procedure CheckGroup_SetColor(AObj: TCheckGroup; AValue: TColor); extdecl;
begin
  AObj.Color := AValue;
end;

function CheckGroup_GetColumnLayout(AObj: TCheckGroup): TColumnLayout; extdecl;
begin
  Result :=  AObj.ColumnLayout;
end;

procedure CheckGroup_SetColumnLayout(AObj: TCheckGroup; AValue: TColumnLayout); extdecl;
begin
  AObj.ColumnLayout := AValue;
end;

function CheckGroup_GetColumns(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.Columns;
end;

procedure CheckGroup_SetColumns(AObj: TCheckGroup; AValue: Integer); extdecl;
begin
  AObj.Columns := AValue;
end;

function CheckGroup_GetConstraints(AObj: TCheckGroup): TSizeConstraints; extdecl;
begin
  Result :=  AObj.Constraints;
end;

procedure CheckGroup_SetConstraints(AObj: TCheckGroup; AValue: TSizeConstraints); extdecl;
begin
  AObj.Constraints := AValue;
end;

function CheckGroup_GetDoubleBuffered(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.DoubleBuffered;
end;

procedure CheckGroup_SetDoubleBuffered(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.DoubleBuffered := AValue;
end;

function CheckGroup_GetDragCursor(AObj: TCheckGroup): TCursor; extdecl;
begin
  Result :=  AObj.DragCursor;
end;

procedure CheckGroup_SetDragCursor(AObj: TCheckGroup; AValue: TCursor); extdecl;
begin
  AObj.DragCursor := AValue;
end;

function CheckGroup_GetDragMode(AObj: TCheckGroup): TDragMode; extdecl;
begin
  Result :=  AObj.DragMode;
end;

procedure CheckGroup_SetDragMode(AObj: TCheckGroup; AValue: TDragMode); extdecl;
begin
  AObj.DragMode := AValue;
end;

function CheckGroup_GetEnabled(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.Enabled;
end;

procedure CheckGroup_SetEnabled(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.Enabled := AValue;
end;

function CheckGroup_GetFont(AObj: TCheckGroup): TFont; extdecl;
begin
  Result :=  AObj.Font;
end;

procedure CheckGroup_SetFont(AObj: TCheckGroup; AValue: TFont); extdecl;
begin
  AObj.Font := AValue;
end;

function CheckGroup_GetItems(AObj: TCheckGroup): TStrings; extdecl;
begin
  Result :=  AObj.Items;
end;

procedure CheckGroup_SetItems(AObj: TCheckGroup; AValue: TStrings); extdecl;
begin
  AObj.Items := AValue;
end;

//EVENT_TYPE:TNotifyEvent
procedure CheckGroup_SetOnClick(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnClick}
  {$DEFINE EventMethodName := OnClick}
  EventMethodCode
end;

//EVENT_TYPE:TNotifyEvent
procedure CheckGroup_SetOnDblClick(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnDblClick}
  {$DEFINE EventMethodName := OnDblClick}
  EventMethodCode
end;

//EVENT_TYPE:TDragDropEvent
procedure CheckGroup_SetOnDragDrop(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnDragDrop}
  {$DEFINE EventMethodName := OnDragDrop}
  EventMethodCode
end;

//EVENT_TYPE:TDragOverEvent
procedure CheckGroup_SetOnDragOver(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnDragOver}
  {$DEFINE EventMethodName := OnDragOver}
  EventMethodCode
end;

//EVENT_TYPE:TEndDragEvent
procedure CheckGroup_SetOnEndDrag(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnEndDrag}
  {$DEFINE EventMethodName := OnEndDrag}
  EventMethodCode
end;

//EVENT_TYPE:TNotifyEvent
procedure CheckGroup_SetOnEnter(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnEnter}
  {$DEFINE EventMethodName := OnEnter}
  EventMethodCode
end;

//EVENT_TYPE:TNotifyEvent
procedure CheckGroup_SetOnExit(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnExit}
  {$DEFINE EventMethodName := OnExit}
  EventMethodCode
end;

//EVENT_TYPE:TCheckGroupClicked
procedure CheckGroup_SetOnItemClick(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnItemClick}
  {$DEFINE EventMethodName := OnItemClick}
  EventMethodCode
end;

//EVENT_TYPE:TKeyEvent
procedure CheckGroup_SetOnKeyDown(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnKeyDown}
  {$DEFINE EventMethodName := OnKeyDown}
  EventMethodCode
end;

//EVENT_TYPE:TKeyPressEvent
procedure CheckGroup_SetOnKeyPress(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnKeyPress}
  {$DEFINE EventMethodName := OnKeyPress}
  EventMethodCode
end;

//EVENT_TYPE:TKeyEvent
procedure CheckGroup_SetOnKeyUp(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnKeyUp}
  {$DEFINE EventMethodName := OnKeyUp}
  EventMethodCode
end;

//EVENT_TYPE:TMouseEvent
procedure CheckGroup_SetOnMouseDown(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnMouseDown}
  {$DEFINE EventMethodName := OnMouseDown}
  EventMethodCode
end;

//EVENT_TYPE:TNotifyEvent
procedure CheckGroup_SetOnMouseEnter(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnMouseEnter}
  {$DEFINE EventMethodName := OnMouseEnter}
  EventMethodCode
end;

//EVENT_TYPE:TNotifyEvent
procedure CheckGroup_SetOnMouseLeave(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnMouseLeave}
  {$DEFINE EventMethodName := OnMouseLeave}
  EventMethodCode
end;

//EVENT_TYPE:TMouseMoveEvent
procedure CheckGroup_SetOnMouseMove(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnMouseMove}
  {$DEFINE EventMethodName := OnMouseMove}
  EventMethodCode
end;

//EVENT_TYPE:TMouseEvent
procedure CheckGroup_SetOnMouseUp(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnMouseUp}
  {$DEFINE EventMethodName := OnMouseUp}
  EventMethodCode
end;

//EVENT_TYPE:TMouseWheelEvent
procedure CheckGroup_SetOnMouseWheel(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnMouseWheel}
  {$DEFINE EventMethodName := OnMouseWheel}
  EventMethodCode
end;

//EVENT_TYPE:TMouseWheelUpDownEvent
procedure CheckGroup_SetOnMouseWheelDown(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnMouseWheelDown}
  {$DEFINE EventMethodName := OnMouseWheelDown}
  EventMethodCode
end;

//EVENT_TYPE:TMouseWheelUpDownEvent
procedure CheckGroup_SetOnMouseWheelUp(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnMouseWheelUp}
  {$DEFINE EventMethodName := OnMouseWheelUp}
  EventMethodCode
end;

//EVENT_TYPE:TNotifyEvent
procedure CheckGroup_SetOnResize(AObj: TCheckGroup; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnResize}
  {$DEFINE EventMethodName := OnResize}
  EventMethodCode
end;

function CheckGroup_GetParentFont(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.ParentFont;
end;

procedure CheckGroup_SetParentFont(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.ParentFont := AValue;
end;

function CheckGroup_GetParentColor(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.ParentColor;
end;

procedure CheckGroup_SetParentColor(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.ParentColor := AValue;
end;

function CheckGroup_GetParentDoubleBuffered(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.ParentDoubleBuffered;
end;

procedure CheckGroup_SetParentDoubleBuffered(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.ParentDoubleBuffered := AValue;
end;

function CheckGroup_GetParentShowHint(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.ParentShowHint;
end;

procedure CheckGroup_SetParentShowHint(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.ParentShowHint := AValue;
end;

function CheckGroup_GetPopupMenu(AObj: TCheckGroup): TPopupMenu; extdecl;
begin
  Result :=  AObj.PopupMenu;
end;

procedure CheckGroup_SetPopupMenu(AObj: TCheckGroup; AValue: TPopupMenu); extdecl;
begin
  AObj.PopupMenu := AValue;
end;

function CheckGroup_GetShowHint(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.ShowHint;
end;

procedure CheckGroup_SetShowHint(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.ShowHint := AValue;
end;

function CheckGroup_GetTabOrder(AObj: TCheckGroup): TTabOrder; extdecl;
begin
  Result :=  AObj.TabOrder;
end;

procedure CheckGroup_SetTabOrder(AObj: TCheckGroup; AValue: TTabOrder); extdecl;
begin
  AObj.TabOrder := AValue;
end;

function CheckGroup_GetTabStop(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.TabStop;
end;

procedure CheckGroup_SetTabStop(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.TabStop := AValue;
end;

function CheckGroup_GetVisible(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.Visible;
end;

procedure CheckGroup_SetVisible(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.Visible := AValue;
end;

function CheckGroup_GetDockClientCount(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.DockClientCount;
end;

function CheckGroup_GetDockSite(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.DockSite;
end;

procedure CheckGroup_SetDockSite(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.DockSite := AValue;
end;

function CheckGroup_GetMouseInClient(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.MouseInClient;
end;

function CheckGroup_GetVisibleDockClientCount(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.VisibleDockClientCount;
end;

function CheckGroup_GetBrush(AObj: TCheckGroup): TBrush; extdecl;
begin
  Result :=  AObj.Brush;
end;

function CheckGroup_GetControlCount(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.ControlCount;
end;

function CheckGroup_GetHandle(AObj: TCheckGroup): HWND; extdecl;
begin
  Result :=  AObj.Handle;
end;

function CheckGroup_GetParentWindow(AObj: TCheckGroup): HWND; extdecl;
begin
  Result :=  AObj.ParentWindow;
end;

procedure CheckGroup_SetParentWindow(AObj: TCheckGroup; AValue: HWND); extdecl;
begin
  AObj.ParentWindow := AValue;
end;

function CheckGroup_GetShowing(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.Showing;
end;

function CheckGroup_GetUseDockManager(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.UseDockManager;
end;

procedure CheckGroup_SetUseDockManager(AObj: TCheckGroup; AValue: LongBool); extdecl;
begin
  AObj.UseDockManager := AValue;
end;

function CheckGroup_GetAction(AObj: TCheckGroup): TBasicAction; extdecl;
begin
  Result :=  AObj.Action;
end;

procedure CheckGroup_SetAction(AObj: TCheckGroup; AValue: TBasicAction); extdecl;
begin
  AObj.Action := AValue;
end;

procedure CheckGroup_GetBoundsRect(AObj: TCheckGroup; var Result: TRect); extdecl;
begin
  Result :=  AObj.BoundsRect;
end;

procedure CheckGroup_SetBoundsRect(AObj: TCheckGroup; var AValue: TRect); extdecl;
begin
  AObj.BoundsRect := AValue;
end;

procedure CheckGroup_GetClientOrigin(AObj: TCheckGroup; var Result: TPoint); extdecl;
begin
  Result :=  AObj.ClientOrigin;
end;

procedure CheckGroup_GetClientRect(AObj: TCheckGroup; var Result: TRect); extdecl;
begin
  Result :=  AObj.ClientRect;
end;

function CheckGroup_GetControlState(AObj: TCheckGroup): TControlState; extdecl;
begin
  Result :=  AObj.ControlState;
end;

procedure CheckGroup_SetControlState(AObj: TCheckGroup; AValue: TControlState); extdecl;
begin
  AObj.ControlState := AValue;
end;

function CheckGroup_GetControlStyle(AObj: TCheckGroup): TControlStyle; extdecl;
begin
  Result :=  AObj.ControlStyle;
end;

procedure CheckGroup_SetControlStyle(AObj: TCheckGroup; AValue: TControlStyle); extdecl;
begin
  AObj.ControlStyle := AValue;
end;

function CheckGroup_GetFloating(AObj: TCheckGroup): LongBool; extdecl;
begin
  Result :=  AObj.Floating;
end;

function CheckGroup_GetParent(AObj: TCheckGroup): TWinControl; extdecl;
begin
  Result :=  AObj.Parent;
end;

procedure CheckGroup_SetParent(AObj: TCheckGroup; AValue: TWinControl); extdecl;
begin
  AObj.Parent := AValue;
end;

function CheckGroup_GetLeft(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.Left;
end;

procedure CheckGroup_SetLeft(AObj: TCheckGroup; AValue: Integer); extdecl;
begin
  AObj.Left := AValue;
end;

function CheckGroup_GetTop(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.Top;
end;

procedure CheckGroup_SetTop(AObj: TCheckGroup; AValue: Integer); extdecl;
begin
  AObj.Top := AValue;
end;

function CheckGroup_GetWidth(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.Width;
end;

procedure CheckGroup_SetWidth(AObj: TCheckGroup; AValue: Integer); extdecl;
begin
  AObj.Width := AValue;
end;

function CheckGroup_GetHeight(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.Height;
end;

procedure CheckGroup_SetHeight(AObj: TCheckGroup; AValue: Integer); extdecl;
begin
  AObj.Height := AValue;
end;

function CheckGroup_GetCursor(AObj: TCheckGroup): TCursor; extdecl;
begin
  Result :=  AObj.Cursor;
end;

procedure CheckGroup_SetCursor(AObj: TCheckGroup; AValue: TCursor); extdecl;
begin
  AObj.Cursor := AValue;
end;

function CheckGroup_GetHint(AObj: TCheckGroup): PChar; extdecl;
begin
  Result :=  PChar(AObj.Hint);
end;

procedure CheckGroup_SetHint(AObj: TCheckGroup; AValue: PChar); extdecl;
begin
  AObj.Hint := AValue;
end;

function CheckGroup_GetComponentCount(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.ComponentCount;
end;

function CheckGroup_GetComponentIndex(AObj: TCheckGroup): Integer; extdecl;
begin
  Result :=  AObj.ComponentIndex;
end;

procedure CheckGroup_SetComponentIndex(AObj: TCheckGroup; AValue: Integer); extdecl;
begin
  AObj.ComponentIndex := AValue;
end;

function CheckGroup_GetOwner(AObj: TCheckGroup): TComponent; extdecl;
begin
  Result :=  AObj.Owner;
end;

function CheckGroup_GetName(AObj: TCheckGroup): PChar; extdecl;
begin
  Result :=  PChar(AObj.Name);
end;

procedure CheckGroup_SetName(AObj: TCheckGroup; AValue: PChar); extdecl;
begin
  AObj.Name := AValue;
end;

function CheckGroup_GetTag(AObj: TCheckGroup): NativeInt; extdecl;
begin
  Result :=  AObj.Tag;
end;

procedure CheckGroup_SetTag(AObj: TCheckGroup; AValue: NativeInt); extdecl;
begin
  AObj.Tag := AValue;
end;

function CheckGroup_GetAnchorSideLeft(AObj: TCheckGroup): TAnchorSide; extdecl;
begin
  Result :=  AObj.AnchorSideLeft;
end;

procedure CheckGroup_SetAnchorSideLeft(AObj: TCheckGroup; AValue: TAnchorSide); extdecl;
begin
  AObj.AnchorSideLeft := AValue;
end;

function CheckGroup_GetAnchorSideTop(AObj: TCheckGroup): TAnchorSide; extdecl;
begin
  Result :=  AObj.AnchorSideTop;
end;

procedure CheckGroup_SetAnchorSideTop(AObj: TCheckGroup; AValue: TAnchorSide); extdecl;
begin
  AObj.AnchorSideTop := AValue;
end;

function CheckGroup_GetAnchorSideRight(AObj: TCheckGroup): TAnchorSide; extdecl;
begin
  Result :=  AObj.AnchorSideRight;
end;

procedure CheckGroup_SetAnchorSideRight(AObj: TCheckGroup; AValue: TAnchorSide); extdecl;
begin
  AObj.AnchorSideRight := AValue;
end;

function CheckGroup_GetAnchorSideBottom(AObj: TCheckGroup): TAnchorSide; extdecl;
begin
  Result :=  AObj.AnchorSideBottom;
end;

procedure CheckGroup_SetAnchorSideBottom(AObj: TCheckGroup; AValue: TAnchorSide); extdecl;
begin
  AObj.AnchorSideBottom := AValue;
end;

function CheckGroup_GetChildSizing(AObj: TCheckGroup): TControlChildSizing; extdecl;
begin
  Result :=  AObj.ChildSizing;
end;

procedure CheckGroup_SetChildSizing(AObj: TCheckGroup; AValue: TControlChildSizing); extdecl;
begin
  AObj.ChildSizing := AValue;
end;

function CheckGroup_GetBorderSpacing(AObj: TCheckGroup): TControlBorderSpacing; extdecl;
begin
  Result :=  AObj.BorderSpacing;
end;

procedure CheckGroup_SetBorderSpacing(AObj: TCheckGroup; AValue: TControlBorderSpacing); extdecl;
begin
  AObj.BorderSpacing := AValue;
end;

function CheckGroup_GetChecked(AObj: TCheckGroup; Index: Integer): LongBool; extdecl;
begin
  Result :=  AObj.Checked[Index];
end;

procedure CheckGroup_SetChecked(AObj: TCheckGroup; Index: Integer; AValue: LongBool); extdecl;
begin
  AObj.Checked[Index] := AValue;
end;

function CheckGroup_GetCheckEnabled(AObj: TCheckGroup; Index: Integer): LongBool; extdecl;
begin
  Result :=  AObj.CheckEnabled[Index];
end;

procedure CheckGroup_SetCheckEnabled(AObj: TCheckGroup; Index: Integer; AValue: LongBool); extdecl;
begin
  AObj.CheckEnabled[Index] := AValue;
end;

function CheckGroup_GetDockClients(AObj: TCheckGroup; Index: Integer): TControl; extdecl;
begin
  Result :=  AObj.DockClients[Index];
end;

function CheckGroup_GetControls(AObj: TCheckGroup; Index: Integer): TControl; extdecl;
begin
  Result :=  AObj.Controls[Index];
end;

function CheckGroup_GetComponents(AObj: TCheckGroup; AIndex: Integer): TComponent; extdecl;
begin
  Result :=  AObj.Components[AIndex];
end;

function CheckGroup_GetAnchorSide(AObj: TCheckGroup; AKind: TAnchorKind): TAnchorSide; extdecl;
begin
  Result :=  AObj.AnchorSide[AKind];
end;

function CheckGroup_StaticClassType: TClass; extdecl;
begin
  Result := TCheckGroup;
end;

exports
  CheckGroup_Create,
  CheckGroup_Free,
  CheckGroup_FlipChildren,
  CheckGroup_Rows,
  CheckGroup_CanFocus,
  CheckGroup_ContainsControl,
  CheckGroup_ControlAtPos,
  CheckGroup_DisableAlign,
  CheckGroup_EnableAlign,
  CheckGroup_FindChildControl,
  CheckGroup_Focused,
  CheckGroup_HandleAllocated,
  CheckGroup_InsertControl,
  CheckGroup_Invalidate,
  CheckGroup_RemoveControl,
  CheckGroup_Realign,
  CheckGroup_Repaint,
  CheckGroup_ScaleBy,
  CheckGroup_ScrollBy,
  CheckGroup_SetBounds,
  CheckGroup_SetFocus,
  CheckGroup_Update,
  CheckGroup_BringToFront,
  CheckGroup_ClientToScreen,
  CheckGroup_ClientToParent,
  CheckGroup_Dragging,
  CheckGroup_HasParent,
  CheckGroup_Hide,
  CheckGroup_Perform,
  CheckGroup_Refresh,
  CheckGroup_ScreenToClient,
  CheckGroup_ParentToClient,
  CheckGroup_SendToBack,
  CheckGroup_Show,
  CheckGroup_GetTextBuf,
  CheckGroup_GetTextLen,
  CheckGroup_SetTextBuf,
  CheckGroup_FindComponent,
  CheckGroup_GetNamePath,
  CheckGroup_Assign,
  CheckGroup_ClassType,
  CheckGroup_ClassName,
  CheckGroup_InstanceSize,
  CheckGroup_InheritsFrom,
  CheckGroup_Equals,
  CheckGroup_GetHashCode,
  CheckGroup_ToString,
  CheckGroup_AnchorToNeighbour,
  CheckGroup_AnchorParallel,
  CheckGroup_AnchorHorizontalCenterTo,
  CheckGroup_AnchorVerticalCenterTo,
  CheckGroup_AnchorAsAlign,
  CheckGroup_AnchorClient,
  CheckGroup_GetAlign,
  CheckGroup_SetAlign,
  CheckGroup_GetAnchors,
  CheckGroup_SetAnchors,
  CheckGroup_GetAutoFill,
  CheckGroup_SetAutoFill,
  CheckGroup_GetAutoSize,
  CheckGroup_SetAutoSize,
  CheckGroup_GetBiDiMode,
  CheckGroup_SetBiDiMode,
  CheckGroup_GetCaption,
  CheckGroup_SetCaption,
  CheckGroup_GetClientHeight,
  CheckGroup_SetClientHeight,
  CheckGroup_GetClientWidth,
  CheckGroup_SetClientWidth,
  CheckGroup_GetColor,
  CheckGroup_SetColor,
  CheckGroup_GetColumnLayout,
  CheckGroup_SetColumnLayout,
  CheckGroup_GetColumns,
  CheckGroup_SetColumns,
  CheckGroup_GetConstraints,
  CheckGroup_SetConstraints,
  CheckGroup_GetDoubleBuffered,
  CheckGroup_SetDoubleBuffered,
  CheckGroup_GetDragCursor,
  CheckGroup_SetDragCursor,
  CheckGroup_GetDragMode,
  CheckGroup_SetDragMode,
  CheckGroup_GetEnabled,
  CheckGroup_SetEnabled,
  CheckGroup_GetFont,
  CheckGroup_SetFont,
  CheckGroup_GetItems,
  CheckGroup_SetItems,
  CheckGroup_SetOnClick,
  CheckGroup_SetOnDblClick,
  CheckGroup_SetOnDragDrop,
  CheckGroup_SetOnDragOver,
  CheckGroup_SetOnEndDrag,
  CheckGroup_SetOnEnter,
  CheckGroup_SetOnExit,
  CheckGroup_SetOnItemClick,
  CheckGroup_SetOnKeyDown,
  CheckGroup_SetOnKeyPress,
  CheckGroup_SetOnKeyUp,
  CheckGroup_SetOnMouseDown,
  CheckGroup_SetOnMouseEnter,
  CheckGroup_SetOnMouseLeave,
  CheckGroup_SetOnMouseMove,
  CheckGroup_SetOnMouseUp,
  CheckGroup_SetOnMouseWheel,
  CheckGroup_SetOnMouseWheelDown,
  CheckGroup_SetOnMouseWheelUp,
  CheckGroup_SetOnResize,
  CheckGroup_GetParentFont,
  CheckGroup_SetParentFont,
  CheckGroup_GetParentColor,
  CheckGroup_SetParentColor,
  CheckGroup_GetParentDoubleBuffered,
  CheckGroup_SetParentDoubleBuffered,
  CheckGroup_GetParentShowHint,
  CheckGroup_SetParentShowHint,
  CheckGroup_GetPopupMenu,
  CheckGroup_SetPopupMenu,
  CheckGroup_GetShowHint,
  CheckGroup_SetShowHint,
  CheckGroup_GetTabOrder,
  CheckGroup_SetTabOrder,
  CheckGroup_GetTabStop,
  CheckGroup_SetTabStop,
  CheckGroup_GetVisible,
  CheckGroup_SetVisible,
  CheckGroup_GetDockClientCount,
  CheckGroup_GetDockSite,
  CheckGroup_SetDockSite,
  CheckGroup_GetMouseInClient,
  CheckGroup_GetVisibleDockClientCount,
  CheckGroup_GetBrush,
  CheckGroup_GetControlCount,
  CheckGroup_GetHandle,
  CheckGroup_GetParentWindow,
  CheckGroup_SetParentWindow,
  CheckGroup_GetShowing,
  CheckGroup_GetUseDockManager,
  CheckGroup_SetUseDockManager,
  CheckGroup_GetAction,
  CheckGroup_SetAction,
  CheckGroup_GetBoundsRect,
  CheckGroup_SetBoundsRect,
  CheckGroup_GetClientOrigin,
  CheckGroup_GetClientRect,
  CheckGroup_GetControlState,
  CheckGroup_SetControlState,
  CheckGroup_GetControlStyle,
  CheckGroup_SetControlStyle,
  CheckGroup_GetFloating,
  CheckGroup_GetParent,
  CheckGroup_SetParent,
  CheckGroup_GetLeft,
  CheckGroup_SetLeft,
  CheckGroup_GetTop,
  CheckGroup_SetTop,
  CheckGroup_GetWidth,
  CheckGroup_SetWidth,
  CheckGroup_GetHeight,
  CheckGroup_SetHeight,
  CheckGroup_GetCursor,
  CheckGroup_SetCursor,
  CheckGroup_GetHint,
  CheckGroup_SetHint,
  CheckGroup_GetComponentCount,
  CheckGroup_GetComponentIndex,
  CheckGroup_SetComponentIndex,
  CheckGroup_GetOwner,
  CheckGroup_GetName,
  CheckGroup_SetName,
  CheckGroup_GetTag,
  CheckGroup_SetTag,
  CheckGroup_GetAnchorSideLeft,
  CheckGroup_SetAnchorSideLeft,
  CheckGroup_GetAnchorSideTop,
  CheckGroup_SetAnchorSideTop,
  CheckGroup_GetAnchorSideRight,
  CheckGroup_SetAnchorSideRight,
  CheckGroup_GetAnchorSideBottom,
  CheckGroup_SetAnchorSideBottom,
  CheckGroup_GetChildSizing,
  CheckGroup_SetChildSizing,
  CheckGroup_GetBorderSpacing,
  CheckGroup_SetBorderSpacing,
  CheckGroup_GetChecked,
  CheckGroup_SetChecked,
  CheckGroup_GetCheckEnabled,
  CheckGroup_SetCheckEnabled,
  CheckGroup_GetDockClients,
  CheckGroup_GetControls,
  CheckGroup_GetComponents,
  CheckGroup_GetAnchorSide,
  CheckGroup_StaticClassType;

