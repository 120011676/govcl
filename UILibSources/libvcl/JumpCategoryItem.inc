
//----------------------------------------
// The code is automatically generated by the GenlibVcl tool.
// Copyright Â© ying32. All Rights Reserved.
// 
// Licensed under Apache License 2.0
//
//----------------------------------------

function JumpCategoryItem_Create(AOwner: TCollection): TJumpCategoryItem; stdcall;
begin
  Result :=  TJumpCategoryItem.Create(AOwner);
end;

procedure JumpCategoryItem_Free(AObj: TJumpCategoryItem); stdcall;
begin
  AObj.Free;
end;

function JumpCategoryItem_GetNamePath(AObj: TJumpCategoryItem): PChar; stdcall;
begin
  Result :=  PChar(AObj.GetNamePath);
end;

procedure JumpCategoryItem_Assign(AObj: TJumpCategoryItem; Source: TPersistent); stdcall;
begin
  AObj.Assign(Source);
end;

procedure JumpCategoryItem_DisposeOf(AObj: TJumpCategoryItem); stdcall;
begin
  AObj.DisposeOf;
end;

function JumpCategoryItem_ClassType(AObj: TJumpCategoryItem): TClass; stdcall;
begin
  Result :=  AObj.ClassType;
end;

function JumpCategoryItem_ClassName(AObj: TJumpCategoryItem): PChar; stdcall;
begin
  Result :=  PChar(AObj.ClassName);
end;

function JumpCategoryItem_InstanceSize(AObj: TJumpCategoryItem): Integer; stdcall;
begin
  Result :=  AObj.InstanceSize;
end;

function JumpCategoryItem_InheritsFrom(AObj: TJumpCategoryItem; AClass: TClass): LongBool; stdcall;
begin
  Result :=  AObj.InheritsFrom(AClass);
end;

function JumpCategoryItem_Equals(AObj: TJumpCategoryItem; Obj: TObject): LongBool; stdcall;
begin
  Result :=  AObj.Equals(Obj);
end;

function JumpCategoryItem_GetHashCode(AObj: TJumpCategoryItem): Integer; stdcall;
begin
  Result :=  AObj.GetHashCode;
end;

function JumpCategoryItem_ToString(AObj: TJumpCategoryItem): PChar; stdcall;
begin
  Result :=  PChar(AObj.ToString);
end;

function JumpCategoryItem_GetVisible(AObj: TJumpCategoryItem): LongBool; stdcall;
begin
  Result :=  AObj.Visible;
end;

procedure JumpCategoryItem_SetVisible(AObj: TJumpCategoryItem; AValue: LongBool); stdcall;
begin
  AObj.Visible := AValue;
end;

function JumpCategoryItem_GetCategoryName(AObj: TJumpCategoryItem): PChar; stdcall;
begin
  Result :=  PChar(AObj.CategoryName);
end;

procedure JumpCategoryItem_SetCategoryName(AObj: TJumpCategoryItem; AValue: PChar); stdcall;
begin
  AObj.CategoryName := AValue;
end;

function JumpCategoryItem_GetItems(AObj: TJumpCategoryItem): TJumpListCollection; stdcall;
begin
  Result :=  AObj.Items;
end;

procedure JumpCategoryItem_SetItems(AObj: TJumpCategoryItem; AValue: TJumpListCollection); stdcall;
begin
  AObj.Items := AValue;
end;

function JumpCategoryItem_GetCollection(AObj: TJumpCategoryItem): TCollection; stdcall;
begin
  Result :=  AObj.Collection;
end;

procedure JumpCategoryItem_SetCollection(AObj: TJumpCategoryItem; AValue: TCollection); stdcall;
begin
  AObj.Collection := AValue;
end;

function JumpCategoryItem_GetIndex(AObj: TJumpCategoryItem): Integer; stdcall;
begin
  Result :=  AObj.Index;
end;

procedure JumpCategoryItem_SetIndex(AObj: TJumpCategoryItem; AValue: Integer); stdcall;
begin
  AObj.Index := AValue;
end;

function JumpCategoryItem_GetDisplayName(AObj: TJumpCategoryItem): PChar; stdcall;
begin
  Result :=  PChar(AObj.DisplayName);
end;

procedure JumpCategoryItem_SetDisplayName(AObj: TJumpCategoryItem; AValue: PChar); stdcall;
begin
  AObj.DisplayName := AValue;
end;

function JumpCategoryItem_StaticClassType: TClass; stdcall;
begin
  Result := TJumpCategoryItem;
end;

exports
  JumpCategoryItem_Create,
  JumpCategoryItem_Free,
  JumpCategoryItem_GetNamePath,
  JumpCategoryItem_Assign,
  JumpCategoryItem_DisposeOf,
  JumpCategoryItem_ClassType,
  JumpCategoryItem_ClassName,
  JumpCategoryItem_InstanceSize,
  JumpCategoryItem_InheritsFrom,
  JumpCategoryItem_Equals,
  JumpCategoryItem_GetHashCode,
  JumpCategoryItem_ToString,
  JumpCategoryItem_GetVisible,
  JumpCategoryItem_SetVisible,
  JumpCategoryItem_GetCategoryName,
  JumpCategoryItem_SetCategoryName,
  JumpCategoryItem_GetItems,
  JumpCategoryItem_SetItems,
  JumpCategoryItem_GetCollection,
  JumpCategoryItem_SetCollection,
  JumpCategoryItem_GetIndex,
  JumpCategoryItem_SetIndex,
  JumpCategoryItem_GetDisplayName,
  JumpCategoryItem_SetDisplayName,
  JumpCategoryItem_StaticClassType;

