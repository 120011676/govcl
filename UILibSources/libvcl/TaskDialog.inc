
//----------------------------------------
// The code is automatically generated by the GenlibVcl tool.
// Copyright Â© ying32. All Rights Reserved.
// 
// Licensed under Apache License 2.0
//
//----------------------------------------

function TaskDialog_Create(AOwner: TComponent): TTaskDialog; stdcall;
begin
  Result :=  TTaskDialog.Create(AOwner);
end;

procedure TaskDialog_Free(AObj: TTaskDialog); stdcall;
begin
  AObj.Free;
end;

function TaskDialog_Execute(AObj: TTaskDialog): LongBool; stdcall;
begin
  Result :=  AObj.Execute;
end;

function TaskDialog_FindComponent(AObj: TTaskDialog; AName: PChar): TComponent; stdcall;
begin
  Result :=  AObj.FindComponent(AName);
end;

function TaskDialog_GetNamePath(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.GetNamePath);
end;

function TaskDialog_HasParent(AObj: TTaskDialog): LongBool; stdcall;
begin
  Result :=  AObj.HasParent;
end;

procedure TaskDialog_Assign(AObj: TTaskDialog; Source: TPersistent); stdcall;
begin
  AObj.Assign(Source);
end;

procedure TaskDialog_DisposeOf(AObj: TTaskDialog); stdcall;
begin
  AObj.DisposeOf;
end;

function TaskDialog_ClassType(AObj: TTaskDialog): TClass; stdcall;
begin
  Result :=  AObj.ClassType;
end;

function TaskDialog_ClassName(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.ClassName);
end;

function TaskDialog_InstanceSize(AObj: TTaskDialog): Integer; stdcall;
begin
  Result :=  AObj.InstanceSize;
end;

function TaskDialog_InheritsFrom(AObj: TTaskDialog; AClass: TClass): LongBool; stdcall;
begin
  Result :=  AObj.InheritsFrom(AClass);
end;

function TaskDialog_Equals(AObj: TTaskDialog; Obj: TObject): LongBool; stdcall;
begin
  Result :=  AObj.Equals(Obj);
end;

function TaskDialog_GetHashCode(AObj: TTaskDialog): Integer; stdcall;
begin
  Result :=  AObj.GetHashCode;
end;

function TaskDialog_ToString(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.ToString);
end;

function TaskDialog_GetButtons(AObj: TTaskDialog): TTaskDialogButtons; stdcall;
begin
  Result :=  AObj.Buttons;
end;

procedure TaskDialog_SetButtons(AObj: TTaskDialog; AValue: TTaskDialogButtons); stdcall;
begin
  AObj.Buttons := AValue;
end;

function TaskDialog_GetCaption(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.Caption);
end;

procedure TaskDialog_SetCaption(AObj: TTaskDialog; AValue: PChar); stdcall;
begin
  AObj.Caption := AValue;
end;

function TaskDialog_GetCommonButtons(AObj: TTaskDialog): TTaskDialogCommonButtons; stdcall;
begin
  Result :=  AObj.CommonButtons;
end;

procedure TaskDialog_SetCommonButtons(AObj: TTaskDialog; AValue: TTaskDialogCommonButtons); stdcall;
begin
  AObj.CommonButtons := AValue;
end;

function TaskDialog_GetCustomFooterIcon(AObj: TTaskDialog): TIcon; stdcall;
begin
  Result :=  AObj.CustomFooterIcon;
end;

procedure TaskDialog_SetCustomFooterIcon(AObj: TTaskDialog; AValue: TIcon); stdcall;
begin
  AObj.CustomFooterIcon := AValue;
end;

function TaskDialog_GetCustomMainIcon(AObj: TTaskDialog): TIcon; stdcall;
begin
  Result :=  AObj.CustomMainIcon;
end;

procedure TaskDialog_SetCustomMainIcon(AObj: TTaskDialog; AValue: TIcon); stdcall;
begin
  AObj.CustomMainIcon := AValue;
end;

function TaskDialog_GetDefaultButton(AObj: TTaskDialog): TTaskDialogCommonButton; stdcall;
begin
  Result :=  AObj.DefaultButton;
end;

procedure TaskDialog_SetDefaultButton(AObj: TTaskDialog; AValue: TTaskDialogCommonButton); stdcall;
begin
  AObj.DefaultButton := AValue;
end;

function TaskDialog_GetExpandButtonCaption(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.ExpandButtonCaption);
end;

procedure TaskDialog_SetExpandButtonCaption(AObj: TTaskDialog; AValue: PChar); stdcall;
begin
  AObj.ExpandButtonCaption := AValue;
end;

function TaskDialog_GetExpandedText(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.ExpandedText);
end;

procedure TaskDialog_SetExpandedText(AObj: TTaskDialog; AValue: PChar); stdcall;
begin
  AObj.ExpandedText := AValue;
end;

function TaskDialog_GetFlags(AObj: TTaskDialog): TTaskDialogFlags; stdcall;
begin
  Result :=  AObj.Flags;
end;

procedure TaskDialog_SetFlags(AObj: TTaskDialog; AValue: TTaskDialogFlags); stdcall;
begin
  AObj.Flags := AValue;
end;

function TaskDialog_GetFooterIcon(AObj: TTaskDialog): TTaskDialogIcon; stdcall;
begin
  Result :=  AObj.FooterIcon;
end;

procedure TaskDialog_SetFooterIcon(AObj: TTaskDialog; AValue: TTaskDialogIcon); stdcall;
begin
  AObj.FooterIcon := AValue;
end;

function TaskDialog_GetFooterText(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.FooterText);
end;

procedure TaskDialog_SetFooterText(AObj: TTaskDialog; AValue: PChar); stdcall;
begin
  AObj.FooterText := AValue;
end;

function TaskDialog_GetMainIcon(AObj: TTaskDialog): TTaskDialogIcon; stdcall;
begin
  Result :=  AObj.MainIcon;
end;

procedure TaskDialog_SetMainIcon(AObj: TTaskDialog; AValue: TTaskDialogIcon); stdcall;
begin
  AObj.MainIcon := AValue;
end;

function TaskDialog_GetProgressBar(AObj: TTaskDialog): TTaskDialogProgressBar; stdcall;
begin
  Result :=  AObj.ProgressBar;
end;

procedure TaskDialog_SetProgressBar(AObj: TTaskDialog; AValue: TTaskDialogProgressBar); stdcall;
begin
  AObj.ProgressBar := AValue;
end;

function TaskDialog_GetRadioButtons(AObj: TTaskDialog): TTaskDialogButtons; stdcall;
begin
  Result :=  AObj.RadioButtons;
end;

procedure TaskDialog_SetRadioButtons(AObj: TTaskDialog; AValue: TTaskDialogButtons); stdcall;
begin
  AObj.RadioButtons := AValue;
end;

function TaskDialog_GetText(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.Text);
end;

procedure TaskDialog_SetText(AObj: TTaskDialog; AValue: PChar); stdcall;
begin
  AObj.Text := AValue;
end;

function TaskDialog_GetTitle(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.Title);
end;

procedure TaskDialog_SetTitle(AObj: TTaskDialog; AValue: PChar); stdcall;
begin
  AObj.Title := AValue;
end;

function TaskDialog_GetVerificationText(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.VerificationText);
end;

procedure TaskDialog_SetVerificationText(AObj: TTaskDialog; AValue: PChar); stdcall;
begin
  AObj.VerificationText := AValue;
end;

procedure TaskDialog_SetOnButtonClicked(AObj: TTaskDialog; AEventId: NativeUInt); stdcall;
begin
  if AEventId = 0 then
  begin
    AObj.OnButtonClicked := nil;
    TEventClass.Remove(AObj, @TEventClass.TaskDialogOnButtonClicked);
    Exit;
  end;
  AObj.OnButtonClicked := TEventClass.TaskDialogOnButtonClicked;
  TEventClass.Add(AObj, @TEventClass.TaskDialogOnButtonClicked, AEventId);
end;

procedure TaskDialog_SetOnDialogConstructed(AObj: TTaskDialog; AEventId: NativeUInt); stdcall;
begin
  if AEventId = 0 then
  begin
    AObj.OnDialogConstructed := nil;
    TEventClass.Remove(AObj, @TEventClass.TaskDialogOnDialogConstructed);
    Exit;
  end;
  AObj.OnDialogConstructed := TEventClass.TaskDialogOnDialogConstructed;
  TEventClass.Add(AObj, @TEventClass.TaskDialogOnDialogConstructed, AEventId);
end;

procedure TaskDialog_SetOnDialogCreated(AObj: TTaskDialog; AEventId: NativeUInt); stdcall;
begin
  if AEventId = 0 then
  begin
    AObj.OnDialogCreated := nil;
    TEventClass.Remove(AObj, @TEventClass.TaskDialogOnDialogCreated);
    Exit;
  end;
  AObj.OnDialogCreated := TEventClass.TaskDialogOnDialogCreated;
  TEventClass.Add(AObj, @TEventClass.TaskDialogOnDialogCreated, AEventId);
end;

procedure TaskDialog_SetOnDialogDestroyed(AObj: TTaskDialog; AEventId: NativeUInt); stdcall;
begin
  if AEventId = 0 then
  begin
    AObj.OnDialogDestroyed := nil;
    TEventClass.Remove(AObj, @TEventClass.TaskDialogOnDialogDestroyed);
    Exit;
  end;
  AObj.OnDialogDestroyed := TEventClass.TaskDialogOnDialogDestroyed;
  TEventClass.Add(AObj, @TEventClass.TaskDialogOnDialogDestroyed, AEventId);
end;

procedure TaskDialog_SetOnExpanded(AObj: TTaskDialog; AEventId: NativeUInt); stdcall;
begin
  if AEventId = 0 then
  begin
    AObj.OnExpanded := nil;
    TEventClass.Remove(AObj, @TEventClass.TaskDialogOnExpanded);
    Exit;
  end;
  AObj.OnExpanded := TEventClass.TaskDialogOnExpanded;
  TEventClass.Add(AObj, @TEventClass.TaskDialogOnExpanded, AEventId);
end;

procedure TaskDialog_SetOnHyperlinkClicked(AObj: TTaskDialog; AEventId: NativeUInt); stdcall;
begin
  if AEventId = 0 then
  begin
    AObj.OnHyperlinkClicked := nil;
    TEventClass.Remove(AObj, @TEventClass.TaskDialogOnHyperlinkClicked);
    Exit;
  end;
  AObj.OnHyperlinkClicked := TEventClass.TaskDialogOnHyperlinkClicked;
  TEventClass.Add(AObj, @TEventClass.TaskDialogOnHyperlinkClicked, AEventId);
end;

procedure TaskDialog_SetOnNavigated(AObj: TTaskDialog; AEventId: NativeUInt); stdcall;
begin
  if AEventId = 0 then
  begin
    AObj.OnNavigated := nil;
    TEventClass.Remove(AObj, @TEventClass.TaskDialogOnNavigated);
    Exit;
  end;
  AObj.OnNavigated := TEventClass.TaskDialogOnNavigated;
  TEventClass.Add(AObj, @TEventClass.TaskDialogOnNavigated, AEventId);
end;

procedure TaskDialog_SetOnRadioButtonClicked(AObj: TTaskDialog; AEventId: NativeUInt); stdcall;
begin
  if AEventId = 0 then
  begin
    AObj.OnRadioButtonClicked := nil;
    TEventClass.Remove(AObj, @TEventClass.TaskDialogOnRadioButtonClicked);
    Exit;
  end;
  AObj.OnRadioButtonClicked := TEventClass.TaskDialogOnRadioButtonClicked;
  TEventClass.Add(AObj, @TEventClass.TaskDialogOnRadioButtonClicked, AEventId);
end;

procedure TaskDialog_SetOnTimer(AObj: TTaskDialog; AEventId: NativeUInt); stdcall;
begin
  if AEventId = 0 then
  begin
    AObj.OnTimer := nil;
    TEventClass.Remove(AObj, @TEventClass.TaskDialogOnTimer);
    Exit;
  end;
  AObj.OnTimer := TEventClass.TaskDialogOnTimer;
  TEventClass.Add(AObj, @TEventClass.TaskDialogOnTimer, AEventId);
end;

procedure TaskDialog_SetOnVerificationClicked(AObj: TTaskDialog; AEventId: NativeUInt); stdcall;
begin
  if AEventId = 0 then
  begin
    AObj.OnVerificationClicked := nil;
    TEventClass.Remove(AObj, @TEventClass.TaskDialogOnVerificationClicked);
    Exit;
  end;
  AObj.OnVerificationClicked := TEventClass.TaskDialogOnVerificationClicked;
  TEventClass.Add(AObj, @TEventClass.TaskDialogOnVerificationClicked, AEventId);
end;

function TaskDialog_GetButton(AObj: TTaskDialog): TTaskDialogButtonItem; stdcall;
begin
  Result :=  AObj.Button;
end;

procedure TaskDialog_SetButton(AObj: TTaskDialog; AValue: TTaskDialogButtonItem); stdcall;
begin
  AObj.Button := AValue;
end;

function TaskDialog_GetExpanded(AObj: TTaskDialog): LongBool; stdcall;
begin
  Result :=  AObj.Expanded;
end;

function TaskDialog_GetHandle(AObj: TTaskDialog): HWND; stdcall;
begin
  Result :=  AObj.Handle;
end;

function TaskDialog_GetModalResult(AObj: TTaskDialog): TModalResult; stdcall;
begin
  Result :=  AObj.ModalResult;
end;

procedure TaskDialog_SetModalResult(AObj: TTaskDialog; AValue: TModalResult); stdcall;
begin
  AObj.ModalResult := AValue;
end;

function TaskDialog_GetRadioButton(AObj: TTaskDialog): TTaskDialogRadioButtonItem; stdcall;
begin
  Result :=  AObj.RadioButton;
end;

function TaskDialog_GetURL(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.URL);
end;

function TaskDialog_GetComponentCount(AObj: TTaskDialog): Integer; stdcall;
begin
  Result :=  AObj.ComponentCount;
end;

function TaskDialog_GetComponentIndex(AObj: TTaskDialog): Integer; stdcall;
begin
  Result :=  AObj.ComponentIndex;
end;

procedure TaskDialog_SetComponentIndex(AObj: TTaskDialog; AValue: Integer); stdcall;
begin
  AObj.ComponentIndex := AValue;
end;

function TaskDialog_GetOwner(AObj: TTaskDialog): TComponent; stdcall;
begin
  Result :=  AObj.Owner;
end;

function TaskDialog_GetName(AObj: TTaskDialog): PChar; stdcall;
begin
  Result :=  PChar(AObj.Name);
end;

procedure TaskDialog_SetName(AObj: TTaskDialog; AValue: PChar); stdcall;
begin
  AObj.Name := AValue;
end;

function TaskDialog_GetTag(AObj: TTaskDialog): NativeInt; stdcall;
begin
  Result :=  AObj.Tag;
end;

procedure TaskDialog_SetTag(AObj: TTaskDialog; AValue: NativeInt); stdcall;
begin
  AObj.Tag := AValue;
end;

function TaskDialog_GetComponents(AObj: TTaskDialog; AIndex: Integer): TComponent; stdcall;
begin
  Result :=  AObj.Components[AIndex];
end;

function TaskDialog_StaticClassType: TClass; stdcall;
begin
  Result := TTaskDialog;
end;

exports
  TaskDialog_Create,
  TaskDialog_Free,
  TaskDialog_Execute,
  TaskDialog_FindComponent,
  TaskDialog_GetNamePath,
  TaskDialog_HasParent,
  TaskDialog_Assign,
  TaskDialog_DisposeOf,
  TaskDialog_ClassType,
  TaskDialog_ClassName,
  TaskDialog_InstanceSize,
  TaskDialog_InheritsFrom,
  TaskDialog_Equals,
  TaskDialog_GetHashCode,
  TaskDialog_ToString,
  TaskDialog_GetButtons,
  TaskDialog_SetButtons,
  TaskDialog_GetCaption,
  TaskDialog_SetCaption,
  TaskDialog_GetCommonButtons,
  TaskDialog_SetCommonButtons,
  TaskDialog_GetCustomFooterIcon,
  TaskDialog_SetCustomFooterIcon,
  TaskDialog_GetCustomMainIcon,
  TaskDialog_SetCustomMainIcon,
  TaskDialog_GetDefaultButton,
  TaskDialog_SetDefaultButton,
  TaskDialog_GetExpandButtonCaption,
  TaskDialog_SetExpandButtonCaption,
  TaskDialog_GetExpandedText,
  TaskDialog_SetExpandedText,
  TaskDialog_GetFlags,
  TaskDialog_SetFlags,
  TaskDialog_GetFooterIcon,
  TaskDialog_SetFooterIcon,
  TaskDialog_GetFooterText,
  TaskDialog_SetFooterText,
  TaskDialog_GetMainIcon,
  TaskDialog_SetMainIcon,
  TaskDialog_GetProgressBar,
  TaskDialog_SetProgressBar,
  TaskDialog_GetRadioButtons,
  TaskDialog_SetRadioButtons,
  TaskDialog_GetText,
  TaskDialog_SetText,
  TaskDialog_GetTitle,
  TaskDialog_SetTitle,
  TaskDialog_GetVerificationText,
  TaskDialog_SetVerificationText,
  TaskDialog_SetOnButtonClicked,
  TaskDialog_SetOnDialogConstructed,
  TaskDialog_SetOnDialogCreated,
  TaskDialog_SetOnDialogDestroyed,
  TaskDialog_SetOnExpanded,
  TaskDialog_SetOnHyperlinkClicked,
  TaskDialog_SetOnNavigated,
  TaskDialog_SetOnRadioButtonClicked,
  TaskDialog_SetOnTimer,
  TaskDialog_SetOnVerificationClicked,
  TaskDialog_GetButton,
  TaskDialog_SetButton,
  TaskDialog_GetExpanded,
  TaskDialog_GetHandle,
  TaskDialog_GetModalResult,
  TaskDialog_SetModalResult,
  TaskDialog_GetRadioButton,
  TaskDialog_GetURL,
  TaskDialog_GetComponentCount,
  TaskDialog_GetComponentIndex,
  TaskDialog_SetComponentIndex,
  TaskDialog_GetOwner,
  TaskDialog_GetName,
  TaskDialog_SetName,
  TaskDialog_GetTag,
  TaskDialog_SetTag,
  TaskDialog_GetComponents,
  TaskDialog_StaticClassType;

